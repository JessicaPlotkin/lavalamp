float Circle(vec2 uv, vec2 pos, vec2 p, float r) {
    return r / (distance(uv - pos, p) * 0.9);
}

float Ellipse(vec2 uv, vec2 p, float a, float b) {
    float shape = pow(p.x - uv.x, 2.0) / pow(b, 2.0) + pow(p.y - uv.y, 2.0) / pow(a, 2.0);
    return shape / (distance(uv, p));
}

float Circle(vec2 uv, vec2 pos, vec2 p, float r) {
    return r/ (distance(uv - pos, p) * 0.9);
}

float Ellipse(vec2 uv, vec2 p, float a, float b) {
    float shape = pow(p.x - uv.x, 2.0) / pow(b, 2.0) + pow(p.y - uv.y, 2.0) / pow(a, 2.0);
    return shape / (distance(uv, p));
}

float Rectangle(vec2 uv, vec2 p, float left, float right, float bottom, float top, float blur) {
    uv -= p;
    float a = smoothstep(left - blur, left + blur, uv.x) * smoothstep(right+blur, right-blur, uv.x); 
    float b = smoothstep(bottom - blur, bottom + blur, uv.y) * smoothstep(top+blur, top-blur, uv.y); 
    return a * b;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates [0 <> 1].
    vec2 uv = fragCoord/iResolution.xy;
    
    // Center circle at origin.
    uv -= 0.5;
    
    // Scale by aspect ratio.
    uv.x *= iResolution.x/iResolution.y;
    
    // Create the top and bottom silver frames.
    float recs = Rectangle(uv, vec2(0, 0.55), -1.0, 1.0, -0.1, 0.1, 0.01);
    recs += Rectangle(uv, vec2(0, -0.55), -1.0, 1.0, -0.1, 0.1, 0.01);
    
    // Create the bottom "blob" and the wax balls.
    float c = 0.0;
    if (recs == 0.0) {
        if (uv.y <= 0.0) c = Ellipse(uv, vec2(0.0, 0.0), 0.75, 1.25);
        else c = Ellipse(uv, vec2(0.0, 0.0), 1.0, 1.25);
        c += Circle(uv, vec2(0.1, -0.3), vec2(-sin(iTime * 0.2) * 0.6, -cos(iTime * 0.3) * 0.4), 0.04);
        c += Circle(uv, vec2(0.2, -0.1), vec2(sin(iTime * 0.3) * 0.3, cos(iTime * 0.4) * 0.3), 0.045);
        c += Circle(uv, vec2(-0.15, -0.15), vec2(-sin(iTime * 0.3) * 0.2, cos(iTime * 0.25) * 0.6), 0.045);
        c += Circle(uv, vec2(-0.05, -0.25), vec2(-sin(iTime * 0.1) * 0.1, cos(iTime * 0.2) * 0.5), 0.055);
        c += Circle(uv, vec2(0.05, -0.35), vec2(sin(iTime * 0.2) * 0.3, cos(iTime * 0.2) * 0.5), 0.03);
        c += Circle(uv, vec2(-0.2, -0.2), vec2(-sin(iTime * 0.24) * 0.65, cos(iTime * 0.3) * 0.7), 0.045);
        c += Circle(uv, vec2(0.15, -0.3), vec2(sin(iTime * 0.3) * 0.5, cos(iTime * 0.1) * 0.6), 0.035);
        c += Circle(uv, vec2(-0.15, -0.3), vec2(cos(iTime * 0.3) * 0.5, sin(iTime * 0.1) * 0.1), 0.035);
        c += Circle(uv, vec2(0.05, -0.1), vec2(cos(iTime * 0.1) * 0.5, sin(iTime * 0.4) * 0.4), 0.055);
        c += Circle(uv, vec2(0.2, -0.4), vec2(cos(iTime * 0.5) * 0.4, sin(iTime * 0.4) * 0.3), 0.045);
    }
    

    // Background color.
    vec4 color = vec4(0.18, 0.01, 0.2, 1.0);
    // Add color of the wax ball if present.
    if (c != 0.0) color += vec4(0, 1.0 * c / 2.0, 0.5, 1.0) * c;
    // If position is within the frames, change color to silver.
    if (recs != 0.0) color = vec4(0.75, 0.75, 0.75, 1.0); 
    

    // Output to screen
    fragColor = color;
}
